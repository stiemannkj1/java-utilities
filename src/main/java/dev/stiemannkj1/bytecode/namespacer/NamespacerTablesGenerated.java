package dev.stiemannkj1.bytecode.namespacer;

import static dev.stiemannkj1.util.Assert.assertNotNull;
import dev.stiemannkj1.util.GeneratedBy;

@GeneratedBy("dev.stiemannkj1.bytecode.namespacer.NamespacerTablesGenerator")
final class NamespacerTablesGenerated {

    /**
     * Lookup table to determine if an ASCII character is a valid Java ClassTypeSignature as described
     * in the JVM spec section 4.7.9.1 Signatures
     * (https://docs.oracle.com/javase/specs/jvms/se22/html/jvms-4.html#jvms-ClassTypeSignature).
     *
     * <p>NOTE: this table also allows '$' (which is not allowed in the spec) so that code can be
     * reused for class names, file names, internal class names, and class type signatures. The
     * namespacer avoids strictly validating strings and signatures for the sake of performance.
     */
     static boolean[] ASCII_CLASS_TYPE_SIGNATURE_CHARS = new boolean[] {
        /* '\u0000'  == */ false,
        /* '\u0001'  == */ false,
        /* '\u0002'  == */ false,
        /* '\u0003'  == */ false,
        /* '\u0004'  == */ false,
        /* '\u0005'  == */ false,
        /* '\u0006'  == */ false,
        /* '\u0007'  == */ false,
        /* '\b'      == */ false,
        /* '\t'      == */ false,
        /* '\n'      == */ false,
        /* '\u000B'  == */ false,
        /* '\f'      == */ false,
        /* '\r'      == */ false,
        /* '\u000E'  == */ false,
        /* '\u000F'  == */ false,
        /* '\u0010'  == */ false,
        /* '\u0011'  == */ false,
        /* '\u0012'  == */ false,
        /* '\u0013'  == */ false,
        /* '\u0014'  == */ false,
        /* '\u0015'  == */ false,
        /* '\u0016'  == */ false,
        /* '\u0017'  == */ false,
        /* '\u0018'  == */ false,
        /* '\u0019'  == */ false,
        /* '\u001A'  == */ false,
        /* '\u001B'  == */ false,
        /* '\u001C'  == */ false,
        /* '\u001D'  == */ false,
        /* '\u001E'  == */ false,
        /* '\u001F'  == */ false,
        /* ' '       == */ false,
        /* '!'       == */ false,
        /* '"'       == */ false,
        /* '#'       == */ false,
        /* '$'       == */ true,
        /* '%'       == */ false,
        /* '&'       == */ false,
        /* '''       == */ false,
        /* '('       == */ false,
        /* ')'       == */ false,
        /* '*'       == */ false,
        /* '+'       == */ false,
        /* ','       == */ false,
        /* '-'       == */ false,
        /* '.'       == */ true,
        /* '/'       == */ true,
        /* '0'       == */ true,
        /* '1'       == */ true,
        /* '2'       == */ true,
        /* '3'       == */ true,
        /* '4'       == */ true,
        /* '5'       == */ true,
        /* '6'       == */ true,
        /* '7'       == */ true,
        /* '8'       == */ true,
        /* '9'       == */ true,
        /* ':'       == */ false,
        /* ';'       == */ false,
        /* '<'       == */ false,
        /* '='       == */ false,
        /* '>'       == */ false,
        /* '?'       == */ false,
        /* '@'       == */ false,
        /* 'A'       == */ true,
        /* 'B'       == */ true,
        /* 'C'       == */ true,
        /* 'D'       == */ true,
        /* 'E'       == */ true,
        /* 'F'       == */ true,
        /* 'G'       == */ true,
        /* 'H'       == */ true,
        /* 'I'       == */ true,
        /* 'J'       == */ true,
        /* 'K'       == */ true,
        /* 'L'       == */ true,
        /* 'M'       == */ true,
        /* 'N'       == */ true,
        /* 'O'       == */ true,
        /* 'P'       == */ true,
        /* 'Q'       == */ true,
        /* 'R'       == */ true,
        /* 'S'       == */ true,
        /* 'T'       == */ true,
        /* 'U'       == */ true,
        /* 'V'       == */ true,
        /* 'W'       == */ true,
        /* 'X'       == */ true,
        /* 'Y'       == */ true,
        /* 'Z'       == */ true,
        /* '['       == */ false,
        /* '\'       == */ false,
        /* ']'       == */ false,
        /* '^'       == */ false,
        /* '_'       == */ true,
        /* '`'       == */ false,
        /* 'a'       == */ true,
        /* 'b'       == */ true,
        /* 'c'       == */ true,
        /* 'd'       == */ true,
        /* 'e'       == */ true,
        /* 'f'       == */ true,
        /* 'g'       == */ true,
        /* 'h'       == */ true,
        /* 'i'       == */ true,
        /* 'j'       == */ true,
        /* 'k'       == */ true,
        /* 'l'       == */ true,
        /* 'm'       == */ true,
        /* 'n'       == */ true,
        /* 'o'       == */ true,
        /* 'p'       == */ true,
        /* 'q'       == */ true,
        /* 'r'       == */ true,
        /* 's'       == */ true,
        /* 't'       == */ true,
        /* 'u'       == */ true,
        /* 'v'       == */ true,
        /* 'w'       == */ true,
        /* 'x'       == */ true,
        /* 'y'       == */ true,
        /* 'z'       == */ true,
        /* '{'       == */ false,
        /* '|'       == */ false,
        /* '}'       == */ false,
        /* '~'       == */ false,
        /* '\u007F'  == */ false
    };

    static final byte[][] STANDARD_CONSTANTS = new byte[][] {
        /* "ConstantValue" */ new byte[] { 'C', 'o', 'n', 's', 't', 'a', 'n', 't', 'V', 'a', 'l', 'u', 'e'},
        /* "Code" */ new byte[] { 'C', 'o', 'd', 'e'},
        /* "StackMapTable" */ new byte[] { 'S', 't', 'a', 'c', 'k', 'M', 'a', 'p', 'T', 'a', 'b', 'l', 'e'},
        /* "Exceptions" */ new byte[] { 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 's'},
        /* "InnerClasses" */ new byte[] { 'I', 'n', 'n', 'e', 'r', 'C', 'l', 'a', 's', 's', 'e', 's'},
        /* "EnclosingMethod" */ new byte[] { 'E', 'n', 'c', 'l', 'o', 's', 'i', 'n', 'g', 'M', 'e', 't', 'h', 'o', 'd'},
        /* "Synthetic" */ new byte[] { 'S', 'y', 'n', 't', 'h', 'e', 't', 'i', 'c'},
        /* "Signature" */ new byte[] { 'S', 'i', 'g', 'n', 'a', 't', 'u', 'r', 'e'},
        /* "SourceFile" */ new byte[] { 'S', 'o', 'u', 'r', 'c', 'e', 'F', 'i', 'l', 'e'},
        /* "SourceDebugExtension" */ new byte[] { 'S', 'o', 'u', 'r', 'c', 'e', 'D', 'e', 'b', 'u', 'g', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n'},
        /* "LineNumberTable" */ new byte[] { 'L', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 'T', 'a', 'b', 'l', 'e'},
        /* "LocalVariableTable" */ new byte[] { 'L', 'o', 'c', 'a', 'l', 'V', 'a', 'r', 'i', 'a', 'b', 'l', 'e', 'T', 'a', 'b', 'l', 'e'},
        /* "LocalVariableTypeTable" */ new byte[] { 'L', 'o', 'c', 'a', 'l', 'V', 'a', 'r', 'i', 'a', 'b', 'l', 'e', 'T', 'y', 'p', 'e', 'T', 'a', 'b', 'l', 'e'},
        /* "Deprecated" */ new byte[] { 'D', 'e', 'p', 'r', 'e', 'c', 'a', 't', 'e', 'd'},
        /* "RuntimeVisibleAnnotations" */ new byte[] { 'R', 'u', 'n', 't', 'i', 'm', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'A', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'},
        /* "RuntimeInvisibleAnnotations" */ new byte[] { 'R', 'u', 'n', 't', 'i', 'm', 'e', 'I', 'n', 'v', 'i', 's', 'i', 'b', 'l', 'e', 'A', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'},
        /* "RuntimeVisibleParameterAnnotations" */ new byte[] { 'R', 'u', 'n', 't', 'i', 'm', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 'A', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'},
        /* "RuntimeInvisibleParameterAnnotations" */ new byte[] { 'R', 'u', 'n', 't', 'i', 'm', 'e', 'I', 'n', 'v', 'i', 's', 'i', 'b', 'l', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 'A', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'},
        /* "RuntimeVisibleTypeAnnotations" */ new byte[] { 'R', 'u', 'n', 't', 'i', 'm', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'T', 'y', 'p', 'e', 'A', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'},
        /* "RuntimeInvisibleTypeAnnotations" */ new byte[] { 'R', 'u', 'n', 't', 'i', 'm', 'e', 'I', 'n', 'v', 'i', 's', 'i', 'b', 'l', 'e', 'T', 'y', 'p', 'e', 'A', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's'},
        /* "AnnotationDefault" */ new byte[] { 'A', 'n', 'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 'D', 'e', 'f', 'a', 'u', 'l', 't'},
        /* "BootstrapMethods" */ new byte[] { 'B', 'o', 'o', 't', 's', 't', 'r', 'a', 'p', 'M', 'e', 't', 'h', 'o', 'd', 's'},
        /* "MethodParameters" */ new byte[] { 'M', 'e', 't', 'h', 'o', 'd', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's'},
        /* "Module" */ new byte[] { 'M', 'o', 'd', 'u', 'l', 'e'},
        /* "ModulePackages" */ new byte[] { 'M', 'o', 'd', 'u', 'l', 'e', 'P', 'a', 'c', 'k', 'a', 'g', 'e', 's'},
        /* "ModuleMainClass" */ new byte[] { 'M', 'o', 'd', 'u', 'l', 'e', 'M', 'a', 'i', 'n', 'C', 'l', 'a', 's', 's'},
        /* "NestHost" */ new byte[] { 'N', 'e', 's', 't', 'H', 'o', 's', 't'},
        /* "NestMembers" */ new byte[] { 'N', 'e', 's', 't', 'M', 'e', 'm', 'b', 'e', 'r', 's'},
        /* "Record" */ new byte[] { 'R', 'e', 'c', 'o', 'r', 'd'},
        /* "PermittedSubclasses" */ new byte[] { 'P', 'e', 'r', 'm', 'i', 't', 't', 'e', 'd', 'S', 'u', 'b', 'c', 'l', 'a', 's', 's', 'e', 's'}
    };

    static final byte[][] NOT_TYPE = new byte[][] {
        /* "LineNumberTable" */ assertNotNull(STANDARD_CONSTANTS[10]),
        /* "LocalVariableTable" */ assertNotNull(STANDARD_CONSTANTS[11]),
        /* "LocalVariableTypeTable" */ assertNotNull(STANDARD_CONSTANTS[12])
    };

    static final byte[][] NOT_GENERIC = new byte[][] {
        /* "<clinit>" */ new byte[] { '<', 'c', 'l', 'i', 'n', 'i', 't', '>'},
        /* "<init>" */ new byte[] { '<', 'i', 'n', 'i', 't', '>'}
    };

    private NamespacerTablesGenerated() {}
}
